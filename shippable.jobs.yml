jobs:
  # Deploy the docker image to dockerhub
  - name: ztimer-docker-image
    type: runCLI
    flags: ztimer
    always:
      - NOTIFY: ztimer-slack-notifications
    steps:
      - IN: ztimer-docker-cli-config
      - IN: ztimer-project
      - TASK:
        - script: |
            DOCKER_IMAGE=$ZTIMERPROJECT_PARAMS_SCOPE/$ZTIMERPROJECT_PARAMS_TITLE:$ZTIMERPROJECT_PARAMS_TAG
            NPM_RELEASE=$ZTIMERPROJECT_PARAMS_NAME@$ZTIMERPROJECT_PARAMS_TAG
            echo Downloading $NPM_RELEASE from NPM
            npm install $NPM_RELEASE
            echo Building $DOCKER_IMAGE
            docker build node_modules/$ZTIMERPROJECT_PARAMS_NAME -t $DOCKER_IMAGE
            echo Deploying $DOCKER_IMAGE
            docker push $DOCKER_IMAGE
      - OUT: ztimer-rc-image

  - name: ztimer-manifest
    type: manifest
    flags: ztimer
    always:
      - NOTIFY: ztimer-slack-notifications
    steps:
      - IN: ztimer-rc-image
      - IN: ztimer-docker-options
      - IN: ztimer-docker-image
      - TASK: managed

  - name: ztimer-deploy-stage
    type: deploy
    flags: ztimer
    always:
      - NOTIFY: ztimer-slack-notifications
    steps:
      - IN: ztimer-manifest
      - IN: ztimer-aws-stage-cluster
      - TASK: managed

  - name: ztimer-deploy-prod
    type: deploy
    flags: ztimer
    always:
      - NOTIFY: ztimer-slack-notifications
    steps:
      - IN: ztimer-deploy-stage
        switch: off
      - IN: ztimer-aws-prod-cluster
      - TASK: managed

  - name: ztimer-update-docker-image
    type: runCLI
    flags: ztimer
    always:
      - NOTIFY: ztimer-slack-notifications
    steps:
      - IN: ztimer-docker-cli-config
      - IN: ztimer-project
      - IN: ztimer-deploy-prod
      - TASK:
        - script: |
            DOCKER_IMAGE=$ZTIMERPROJECT_PARAMS_SCOPE/$ZTIMERPROJECT_PARAMS_TITLE
            DOCKER_BUILD=$DOCKER_IMAGE:$ZTIMERPROJECT_PARAMS_TAG
            echo Releasing $DOCKER_BUILD
            NPMVERSION=$(npm dist-tag ls $ZTIMERPROJECT_PARAMS_NAME | grep $ZTIMERPROJECT_PARAMS_TAG)
            docker pull $DOCKER_BUILD
            SEMVAR=${NPMVERSION//rc:/}
            DOCKER_BUILD_VERSION=$DOCKER_IMAGE:$(echo $SEMVAR)
            DOCKER_BUILD_LATEST=$DOCKER_IMAGE:latest
            echo Tagging $DOCKER_BUILD as $DOCKER_BUILD_LATEST
            docker tag $DOCKER_BUILD $DOCKER_BUILD_LATEST
            echo Tagging $DOCKER_BUILD as $DOCKER_BUILD_VERSION
            docker tag $DOCKER_BUILD $DOCKER_BUILD_VERSION
            echo Deploying $DOCKER_BUILD_VERSION
            docker push $DOCKER_BUILD_VERSION
            echo Deploying $DOCKER_BUILD_LATEST
            docker push $DOCKER_BUILD_LATEST
